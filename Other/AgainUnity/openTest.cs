using System.Diagnostics;
using UnityEngine;
using UnityEditor;
using Debug = System.Diagnostics.Debug;

public class openTest
{
    private string m_BatPath;
    private string m_UnityPath;
    private string m_ProjectPath;
    private string m_AssetPath;

    [MenuItem("Test/OpenDomain")]
    private static void Open()
    {
        openTest demo = new openTest();
        demo.InitData();
    }

    private void InitData()
    {
        m_UnityPath = System.Diagnostics.Process.GetCurrentProcess().MainModule.FileName;

        m_AssetPath = Application.dataPath + "/..";

        m_BatPath = Application.dataPath + "/openTest/UpdateFramework.bat";

        int processId = Process.GetCurrentProcess().Id;

        CreateShellExProcess(m_BatPath, string.Format("\"{0}\" \"{1}\" {2} {3}", m_UnityPath, m_AssetPath, m_UnityPath.Length, m_AssetPath.Length), Application.dataPath + "/openTest");

       // Process.GetCurrentProcess().Kill();

    }

    public static Process CreateShellExProcess(string cmd, string args, string workingDir = "")
    {
        var pStartInfo = new System.Diagnostics.ProcessStartInfo(cmd);
        pStartInfo.Arguments = args;
        pStartInfo.CreateNoWindow = false;
        pStartInfo.UseShellExecute = true;
        pStartInfo.RedirectStandardError = false;
        pStartInfo.RedirectStandardInput = false;
        pStartInfo.RedirectStandardOutput = false;
        if (!string.IsNullOrEmpty(workingDir))
        {
            pStartInfo.WorkingDirectory = workingDir;
        }
        return System.Diagnostics.Process.Start(pStartInfo);
        
    }
}
